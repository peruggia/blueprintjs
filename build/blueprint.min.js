!function(blueprint){"use strict";"undefined"!=typeof module&&"undefined"!=typeof module.exports?module.exports=blueprint():"function"==typeof define&&define.amd?define([],function(){return blueprint()}):window.blueprint=blueprint()}(function(){"use strict";var utils={sliceArguments:function(args){return Array.prototype.slice.call(args,1)}},blueprint=function(properties){if("object"!=typeof properties||!properties instanceof Object)throw new Error("To make a Class an Object with its properties is required");var blueprintObject=function(extraProperties){this.properties=properties||{},this.originalObject=extraProperties||{};var init=this.get("init");"function"==typeof init&&init()};return blueprintObject.prototype={get:function(propertyName){var value,args=utils.sliceArguments(arguments);return this.originalObject.hasOwnProperty(propertyName)?value=this.originalObject[propertyName]:this.properties.hasOwnProperty(propertyName)&&(value=this.properties[propertyName]),"function"==typeof value?value.apply(this,args):value},set:function(propertyName,propertyValue){this.originalObject[propertyName]=propertyValue},getProperties:function(){var key,properties=[],existingProperties={};for(key in this.properties)this.properties.hasOwnProperty(key)&&(existingProperties[key]||(existingProperties[key]=!0,properties.push(key)));for(key in this.originalObject)this.originalObject.hasOwnProperty(key)&&(existingProperties[key]||(existingProperties[key]=!0,properties.push(key)));return properties}},blueprintObject};return blueprint.cast=function(Blueprint,objectOrArray){var i,total,listOfObjects;if(objectOrArray instanceof Array){for(total=objectOrArray.length,listOfObjects=[],i=0;total>i;i+=1)listOfObjects.push(new Blueprint(objectOrArray[i]));return listOfObjects}return objectOrArray instanceof Object?new Blueprint(objectOrArray):null},blueprint.toPlainObject=function(blueprintObject){var properties,i,total,plainObject={};if(blueprintObject&&"object"==typeof blueprintObject)for(properties=blueprintObject.getProperties(),total=properties.length,i=0;total>i;i+=1)plainObject[properties[i]]=blueprintObject.get(properties[i]);return plainObject},blueprint});